> ### Calsulates nodes and weights of Gauss-Legendre quadrature.
> ### The nodes and weights are separated by ",\n"
> ### so that they can be used in other programs (C and R).
> ###
> ### For 128-bit quadruple values (with 112-bit fraction part),
> ###   the precision is about log10(2^113) ~ 34 decimal places.
> ### So 36-digit constants are printed.
> ###
> 
> library(Rmpfr)
Loading required package: gmp
Attaching package: 'gmp'
The following objects are masked from 'package:base':
    %*%, apply, crossprod, matrix, tcrossprod

C code of R package 'Rmpfr': GMP using 64 bits per limb
Attaching package: 'Rmpfr'
The following objects are masked from 'package:stats':
    dbinom, dnorm, dpois, pnorm
The following objects are masked from 'package:base':
    cbind, pmax, pmin, rbind

> source("gauss-legendre.R")
> 
> bits <- 160   # log10(2^160) ~ 48 decimal places
> digits <- 36  # 36 decimal digits for printing
> eps <- mpfr(10, bits)^(-42) # precision for Newton procedure
> 
> n <- 20       # number of nodes for Gauss-Legendre quadrature
> y <- gauss.legendre(n, bits=bits, eps=eps)
[1] "Calculating k=1, iterations=5"
[1] "Calculating k=2, iterations=5"
[1] "Calculating k=3, iterations=5"
[1] "Calculating k=4, iterations=5"
[1] "Calculating k=5, iterations=5"
[1] "Calculating k=6, iterations=5"
[1] "Calculating k=7, iterations=5"
[1] "Calculating k=8, iterations=5"
[1] "Calculating k=9, iterations=5"
[1] "Calculating k=10, iterations=5"
> 
> ## Print nodes and weights for copying & pasting into other programs.
> cat(formatMpfr(y$nodes, digits=digits), sep=",\n")
0.993128599185094924786122388471320278,
0.963971927277913791267666131197277222,
0.912234428251325905867752441203298113,
0.839116971822218823394529061701520685,
0.746331906460150792614305070355641590,
0.636053680726515025452836696226285937,
0.510867001950827098004364050955250998,
0.373706088715419560672548177024927237,
0.227785851141645078080496195368574625,
0.0765265211334973337546404093988382110
> cat(formatMpfr(y$weights, digits=digits), sep=",\n")
0.0176140071391521183118619623518528164,
0.0406014298003869413310399522749321099,
0.0626720483341090635695065351870416064,
0.0832767415767047487247581432220462061,
0.101930119817240435036750135480349876,
0.118194531961518417312377377711382287,
0.131688638449176626898494499748163135,
0.142096109318382051329298325067164933,
0.149172986472603746787828737001969437,
0.152753387130725850698084331955097593
> 
> ## Scientific expressions
> cat(formatMpfr(y$nodes, digits=digits, scientific=TRUE), sep=",\n")
9.93128599185094924786122388471320278e-1,
9.63971927277913791267666131197277222e-1,
9.12234428251325905867752441203298113e-1,
8.39116971822218823394529061701520685e-1,
7.46331906460150792614305070355641590e-1,
6.36053680726515025452836696226285937e-1,
5.10867001950827098004364050955250998e-1,
3.73706088715419560672548177024927237e-1,
2.27785851141645078080496195368574625e-1,
7.65265211334973337546404093988382110e-2
> cat(formatMpfr(y$weights, digits=digits, scientific=TRUE), sep=",\n")
1.76140071391521183118619623518528164e-2,
4.06014298003869413310399522749321099e-2,
6.26720483341090635695065351870416064e-2,
8.32767415767047487247581432220462061e-2,
1.01930119817240435036750135480349876e-1,
1.18194531961518417312377377711382287e-1,
1.31688638449176626898494499748163135e-1,
1.42096109318382051329298325067164933e-1,
1.49172986472603746787828737001969437e-1,
1.52753387130725850698084331955097593e-1
>
